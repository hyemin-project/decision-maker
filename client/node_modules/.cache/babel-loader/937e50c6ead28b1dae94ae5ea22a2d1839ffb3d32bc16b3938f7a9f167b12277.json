{"ast":null,"code":"import { ref, computed, onMounted, watch } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'SpinWheelStep',\n  setup() {\n    const store = useStore();\n    const wheelCanvas = ref(null);\n    const isSpinning = ref(false);\n    const choices = computed(() => store.state.choices);\n    const customization = computed(() => store.state.wheelCustomization);\n    const rotation = ref(0);\n    const drawWheel = () => {\n      const canvas = wheelCanvas.value;\n      const ctx = canvas.getContext('2d');\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      const radius = Math.min(centerX, centerY) - 10;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.translate(centerX, centerY);\n      ctx.rotate(rotation.value);\n      const totalChoices = choices.value.length;\n      const anglePerChoice = 2 * Math.PI / totalChoices;\n      choices.value.forEach((choice, index) => {\n        const startAngle = index * anglePerChoice;\n        const endAngle = (index + 1) * anglePerChoice;\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.arc(0, 0, radius, startAngle, endAngle);\n        ctx.closePath();\n\n        // Use customization colors if available, otherwise use default colors\n        const color = customization.value.colors?.[index] || `hsl(${index * 360 / totalChoices}, 70%, 50%)`;\n        ctx.fillStyle = color;\n        ctx.fill();\n\n        // Add text\n        ctx.save();\n        ctx.rotate(startAngle + anglePerChoice / 2);\n        ctx.textAlign = 'right';\n        ctx.fillStyle = 'white';\n        ctx.font = '14px Arial';\n        ctx.fillText(choice, radius - 10, 5);\n        ctx.restore();\n      });\n      ctx.restore();\n    };\n    const spinWheel = () => {\n      if (isSpinning.value) return;\n      isSpinning.value = true;\n      const totalRotation = 360 * 5 + Math.random() * 360; // 5 full rotations + random\n      const duration = 5000; // 5 seconds\n      const start = performance.now();\n      const animate = time => {\n        const elapsed = time - start;\n        const progress = Math.min(elapsed / duration, 1);\n        const easeProgress = 1 - Math.pow(1 - progress, 4); // Ease out quartic\n\n        rotation.value = totalRotation * easeProgress * Math.PI / 180;\n        drawWheel();\n        if (progress < 1) {\n          requestAnimationFrame(animate);\n        } else {\n          const result = choices.value[Math.floor(Math.random() * choices.value.length)];\n          store.commit('setResult', result);\n          store.commit('setCurrentStep', 6);\n          isSpinning.value = false;\n        }\n      };\n      requestAnimationFrame(animate);\n    };\n    onMounted(() => {\n      drawWheel();\n    });\n    watch([choices, customization], () => {\n      drawWheel();\n    });\n    return {\n      wheelCanvas,\n      isSpinning,\n      spinWheel\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","useStore","name","setup","store","wheelCanvas","isSpinning","choices","state","customization","wheelCustomization","rotation","drawWheel","canvas","value","ctx","getContext","centerX","width","centerY","height","radius","Math","min","clearRect","save","translate","rotate","totalChoices","length","anglePerChoice","PI","forEach","choice","index","startAngle","endAngle","beginPath","moveTo","arc","closePath","color","colors","fillStyle","fill","textAlign","font","fillText","restore","spinWheel","totalRotation","random","duration","start","performance","now","animate","time","elapsed","progress","easeProgress","pow","requestAnimationFrame","result","floor","commit"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/SpinWheelStep.vue"],"sourcesContent":["<template>\n  <div class=\"spin-wheel-step\">\n    <h2>Spin the Wheel</h2>\n    <div class=\"wheel-container\">\n      <canvas ref=\"wheelCanvas\" width=\"400\" height=\"400\"></canvas>\n      <div class=\"wheel-arrow\"></div>\n    </div>\n    <button @click=\"spinWheel\" :disabled=\"isSpinning\">{{ isSpinning ? 'Spinning...' : 'Spin' }}</button>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'SpinWheelStep',\n  setup() {\n    const store = useStore()\n    const wheelCanvas = ref(null)\n    const isSpinning = ref(false)\n    const choices = computed(() => store.state.choices)\n    const customization = computed(() => store.state.wheelCustomization)\n    const rotation = ref(0)\n\n    const drawWheel = () => {\n      const canvas = wheelCanvas.value\n      const ctx = canvas.getContext('2d')\n      const centerX = canvas.width / 2\n      const centerY = canvas.height / 2\n      const radius = Math.min(centerX, centerY) - 10\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\n      ctx.save()\n      ctx.translate(centerX, centerY)\n      ctx.rotate(rotation.value)\n\n      const totalChoices = choices.value.length\n      const anglePerChoice = (2 * Math.PI) / totalChoices\n\n      choices.value.forEach((choice, index) => {\n        const startAngle = index * anglePerChoice\n        const endAngle = (index + 1) * anglePerChoice\n\n        ctx.beginPath()\n        ctx.moveTo(0, 0)\n        ctx.arc(0, 0, radius, startAngle, endAngle)\n        ctx.closePath()\n\n        // Use customization colors if available, otherwise use default colors\n        const color = customization.value.colors?.[index] || `hsl(${(index * 360) / totalChoices}, 70%, 50%)`\n        ctx.fillStyle = color\n        ctx.fill()\n\n        // Add text\n        ctx.save()\n        ctx.rotate(startAngle + anglePerChoice / 2)\n        ctx.textAlign = 'right'\n        ctx.fillStyle = 'white'\n        ctx.font = '14px Arial'\n        ctx.fillText(choice, radius - 10, 5)\n        ctx.restore()\n      })\n\n      ctx.restore()\n    }\n\n    const spinWheel = () => {\n      if (isSpinning.value) return\n\n      isSpinning.value = true\n      const totalRotation = 360 * 5 + Math.random() * 360 // 5 full rotations + random\n      const duration = 5000 // 5 seconds\n      const start = performance.now()\n\n      const animate = (time) => {\n        const elapsed = time - start\n        const progress = Math.min(elapsed / duration, 1)\n        const easeProgress = 1 - Math.pow(1 - progress, 4) // Ease out quartic\n\n        rotation.value = (totalRotation * easeProgress * Math.PI) / 180\n\n        drawWheel()\n\n        if (progress < 1) {\n          requestAnimationFrame(animate)\n        } else {\n          const result = choices.value[Math.floor(Math.random() * choices.value.length)]\n          store.commit('setResult', result)\n          store.commit('setCurrentStep', 6)\n          isSpinning.value = false\n        }\n      }\n\n      requestAnimationFrame(animate)\n    }\n\n    onMounted(() => {\n      drawWheel()\n    })\n\n    watch([choices, customization], () => {\n      drawWheel()\n    })\n\n    return {\n      wheelCanvas,\n      isSpinning,\n      spinWheel\n    }\n  }\n}\n</script>\n\n<style scoped>\n.wheel-container {\n  position: relative;\n  width: 400px;\n  height: 400px;\n  margin: 0 auto;\n}\n\n.wheel-arrow {\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-left: 20px solid transparent;\n  border-right: 20px solid transparent;\n  border-top: 40px solid #333;\n  transform: translateX(-50%);\n}\n\nbutton {\n  margin-top: 20px;\n  padding: 10px 20px;\n  font-size: 18px;\n  cursor: pointer;\n}\n\nbutton:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}