{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  console.log('Request config:', config); // Add this line for debugging\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default {\n  async signup(userData) {\n    try {\n      const response = await api.post('/auth/signup', userData);\n      console.log('Signup API response:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Signup error:', error.response ? error.response.data : error.message);\n      throw error;\n    }\n  },\n  async login(credentials) {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error.response ? error.response.data : error.message);\n      throw error;\n    }\n  },\n  async verifyToken() {\n    try {\n      const response = await api.get('/auth/verify-token');\n      return response.data;\n    } catch (error) {\n      console.error('Token verification failed:', error.response ? error.response.data : error.message);\n      return null;\n    }\n  },\n  async saveResult(resultData) {\n    const response = await api.post('/results', resultData);\n    return response.data;\n  },\n  async getDecisionHistory() {\n    try {\n      const response = await api.get('/decisions');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching decision history:', error.response ? error.response.data : error.message);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","console","log","error","Promise","reject","signup","userData","response","post","data","message","login","credentials","setItem","verifyToken","get","saveResult","resultData","getDecisionHistory"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n});\n\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  console.log('Request config:', config);  // Add this line for debugging\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\nexport default {\n  async signup(userData) {\n    try {\n      const response = await api.post('/auth/signup', userData);\n      console.log('Signup API response:', response.data); \n      return response.data;\n    } catch (error) {\n      console.error('Signup error:', error.response ? error.response.data : error.message);\n      throw error;\n    }\n  },\n\n  async login(credentials) {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error.response ? error.response.data : error.message);\n      throw error;\n    }\n  },\n\n  async verifyToken() {\n    try {\n      const response = await api.get('/auth/verify-token');\n      return response.data;\n    } catch (error) {\n      console.error('Token verification failed:', error.response ? error.response.data : error.message);\n      return null;\n    }\n  },\n\n  async saveResult(resultData) {\n    const response = await api.post('/results', resultData);\n    return response.data;\n  },\n\n  async getDecisionHistory() {\n    try {\n      const response = await api.get('/decisions');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching decision history:', error.response ? error.response.data : error.message);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}