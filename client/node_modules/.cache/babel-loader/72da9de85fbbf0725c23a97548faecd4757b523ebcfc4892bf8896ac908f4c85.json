{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'ResultsStep',\n  setup() {\n    const store = useStore();\n    const result = computed(() => store.state.result);\n    const choices = computed(() => store.state.choices);\n    const showShareOptions = ref(false);\n    const resultColor = computed(() => {\n      const colors = store.state.wheelCustomization.colors || [];\n      const index = choices.value.indexOf(result.value);\n      return colors[index] || '#4caf50'; // default color if not found\n    });\n    const spinAgain = () => {\n      store.commit('setCurrentStep', 5); // Go back to spin wheel step\n    };\n    const newDecision = () => {\n      store.commit('resetDecision');\n      store.commit('setCurrentStep', 1); // Go back to first step\n    };\n    const shareResult = () => {\n      showShareOptions.value = !showShareOptions.value;\n    };\n    const shareVia = platform => {\n      const message = `I used the Advanced Virtual Decision Maker and got: ${result.value}`;\n      let url = '';\n      switch (platform) {\n        case 'twitter':\n          url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(message)}`;\n          break;\n        case 'facebook':\n          url = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(window.location.href)}&quote=${encodeURIComponent(message)}`;\n          break;\n        case 'email':\n          url = `mailto:?subject=My Decision Result&body=${encodeURIComponent(message)}`;\n          break;\n      }\n      if (url) {\n        window.open(url, '_blank');\n      }\n      showShareOptions.value = false;\n    };\n    return {\n      result,\n      choices,\n      resultColor,\n      showShareOptions,\n      spinAgain,\n      newDecision,\n      shareResult,\n      shareVia\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","useStore","name","setup","store","result","state","choices","showShareOptions","resultColor","colors","wheelCustomization","index","value","indexOf","spinAgain","commit","newDecision","shareResult","shareVia","platform","message","url","encodeURIComponent","window","location","href","open"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/ResultsStep.vue"],"sourcesContent":["<template>\n  <div class=\"results-step\">\n    <h2>Your Decision Result</h2>\n    <div class=\"result-display\" :style=\"{ backgroundColor: resultColor }\">\n      <p class=\"result-text\">{{ result }}</p>\n    </div>\n    <div class=\"action-buttons\">\n      <button @click=\"spinAgain\" class=\"spin-again-btn\">Spin Again</button>\n      <button @click=\"newDecision\" class=\"new-decision-btn\">New Decision</button>\n      <button @click=\"shareResult\" class=\"share-btn\">Share Result</button>\n    </div>\n    <div v-if=\"showShareOptions\" class=\"share-options\">\n      <button @click=\"shareVia('twitter')\">Twitter</button>\n      <button @click=\"shareVia('facebook')\">Facebook</button>\n      <button @click=\"shareVia('email')\">Email</button>\n    </div>\n    <div class=\"decision-summary\">\n      <h3>Decision Summary</h3>\n      <ul>\n        <li v-for=\"(choice, index) in choices\" :key=\"index\">\n          {{ choice }} {{ choice === result ? '(Selected)' : '' }}\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'ResultsStep',\n  setup() {\n    const store = useStore()\n    const result = computed(() => store.state.result)\n    const choices = computed(() => store.state.choices)\n    const showShareOptions = ref(false)\n\n    const resultColor = computed(() => {\n      const colors = store.state.wheelCustomization.colors || []\n      const index = choices.value.indexOf(result.value)\n      return colors[index] || '#4caf50' // default color if not found\n    })\n\n    const spinAgain = () => {\n      store.commit('setCurrentStep', 5) // Go back to spin wheel step\n    }\n\n    const newDecision = () => {\n      store.commit('resetDecision')\n      store.commit('setCurrentStep', 1) // Go back to first step\n    }\n\n    const shareResult = () => {\n      showShareOptions.value = !showShareOptions.value\n    }\n\n    const shareVia = (platform) => {\n      const message = `I used the Advanced Virtual Decision Maker and got: ${result.value}`\n      let url = ''\n\n      switch (platform) {\n        case 'twitter':\n          url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(message)}`\n          break\n        case 'facebook':\n          url = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(window.location.href)}&quote=${encodeURIComponent(message)}`\n          break\n        case 'email':\n          url = `mailto:?subject=My Decision Result&body=${encodeURIComponent(message)}`\n          break\n      }\n\n      if (url) {\n        window.open(url, '_blank')\n      }\n\n      showShareOptions.value = false\n    }\n\n    return {\n      result,\n      choices,\n      resultColor,\n      showShareOptions,\n      spinAgain,\n      newDecision,\n      shareResult,\n      shareVia\n    }\n  }\n}\n</script>\n\n<style scoped>\n.results-step {\n  text-align: center;\n  padding: 20px;\n}\n\n.result-display {\n  margin: 20px auto;\n  padding: 20px;\n  border-radius: 10px;\n  max-width: 400px;\n}\n\n.result-text {\n  font-size: 24px;\n  font-weight: bold;\n  color: white;\n  margin: 0;\n}\n\n.action-buttons {\n  margin-top: 20px;\n}\n\nbutton {\n  margin: 0 10px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  transition: background-color 0.3s;\n}\n\n.spin-again-btn {\n  background-color: #2196f3;\n  color: white;\n}\n\n.new-decision-btn {\n  background-color: #ff9800;\n  color: white;\n}\n\n.share-btn {\n  background-color: #4caf50;\n  color: white;\n}\n\nbutton:hover {\n  opacity: 0.8;\n}\n\n.share-options {\n  margin-top: 20px;\n}\n\n.share-options button {\n  margin: 0 5px;\n  padding: 5px 10px;\n  font-size: 14px;\n}\n\n.decision-summary {\n  margin-top: 30px;\n  text-align: left;\n  max-width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  margin-bottom: 5px;\n}\n</style>"],"mappings":"AA4BA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,QAAO,QAAS,MAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC;IACvB,MAAMI,MAAK,GAAIL,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACD,MAAM;IAChD,MAAME,OAAM,GAAIP,QAAQ,CAAC,MAAMI,KAAK,CAACE,KAAK,CAACC,OAAO;IAClD,MAAMC,gBAAe,GAAIT,GAAG,CAAC,KAAK;IAElC,MAAMU,WAAU,GAAIT,QAAQ,CAAC,MAAM;MACjC,MAAMU,MAAK,GAAIN,KAAK,CAACE,KAAK,CAACK,kBAAkB,CAACD,MAAK,IAAK,EAAC;MACzD,MAAME,KAAI,GAAIL,OAAO,CAACM,KAAK,CAACC,OAAO,CAACT,MAAM,CAACQ,KAAK;MAChD,OAAOH,MAAM,CAACE,KAAK,KAAK,SAAQ,EAAE;IACpC,CAAC;IAED,MAAMG,SAAQ,GAAIA,CAAA,KAAM;MACtBX,KAAK,CAACY,MAAM,CAAC,gBAAgB,EAAE,CAAC,GAAE;IACpC;IAEA,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxBb,KAAK,CAACY,MAAM,CAAC,eAAe;MAC5BZ,KAAK,CAACY,MAAM,CAAC,gBAAgB,EAAE,CAAC,GAAE;IACpC;IAEA,MAAME,WAAU,GAAIA,CAAA,KAAM;MACxBV,gBAAgB,CAACK,KAAI,GAAI,CAACL,gBAAgB,CAACK,KAAI;IACjD;IAEA,MAAMM,QAAO,GAAKC,QAAQ,IAAK;MAC7B,MAAMC,OAAM,GAAI,uDAAuDhB,MAAM,CAACQ,KAAK,EAAC;MACpF,IAAIS,GAAE,GAAI,EAAC;MAEX,QAAQF,QAAQ;QACd,KAAK,SAAS;UACZE,GAAE,GAAI,yCAAyCC,kBAAkB,CAACF,OAAO,CAAC,EAAC;UAC3E;QACF,KAAK,UAAU;UACbC,GAAE,GAAI,gDAAgDC,kBAAkB,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,UAAUH,kBAAkB,CAACF,OAAO,CAAC,EAAC;UACpI;QACF,KAAK,OAAO;UACVC,GAAE,GAAI,2CAA2CC,kBAAkB,CAACF,OAAO,CAAC,EAAC;UAC7E;MACJ;MAEA,IAAIC,GAAG,EAAE;QACPE,MAAM,CAACG,IAAI,CAACL,GAAG,EAAE,QAAQ;MAC3B;MAEAd,gBAAgB,CAACK,KAAI,GAAI,KAAI;IAC/B;IAEA,OAAO;MACLR,MAAM;MACNE,OAAO;MACPE,WAAW;MACXD,gBAAgB;MAChBO,SAAS;MACTE,WAAW;MACXC,WAAW;MACXC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}