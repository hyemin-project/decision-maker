{"ast":null,"code":"import { ref, computed } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  name: \"EnterChoicesStep\",\n  setup() {\n    const store = useStore();\n    const decision = ref(\"\");\n    const newChoice = ref(\"\");\n    const choices = computed(() => store.state.choices);\n    const decisionQuestion = ref('');\n    const addChoice = () => {\n      if (newChoice.value) {\n        store.commit(\"addChoice\", newChoice.value);\n        newChoice.value = \"\";\n      }\n    };\n    const removeChoice = index => {\n      store.commit(\"removeChoice\", index);\n    };\n    const updateDecisionQuestion = () => {\n      store.dispatch('setDecisionQuestion', decisionQuestion.value);\n    };\n    const nextStep = () => {\n      store.commit(\"setDecision\", decision.value);\n      store.commit(\"setCurrentStep\", 3);\n    };\n    return {\n      decision,\n      newChoice,\n      choices,\n      addChoice,\n      removeChoice,\n      nextStep\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","useStore","name","setup","store","decision","newChoice","choices","state","decisionQuestion","addChoice","value","commit","removeChoice","index","updateDecisionQuestion","dispatch","nextStep"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/EnterChoicesStep.vue"],"sourcesContent":["<template>\n  <div class=\"container enter-choices-step\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12 col-md-8 col-lg-6\">\n        <h3 class=\"text-start mb-4\">Make a decision</h3>\n        \n        <!-- Decision input -->\n        <div class=\"mb-4\">\n          <label class=\"form-label\">What's your decision?</label>\n          <input\n            v-model=\"decision\"\n            class=\"form-control custom-input\"\n            placeholder=\"Should I move to New York?\"\n          />\n        </div>\n\n        <h4 class=\"text-start mb-3\">Options</h4>\n\n        <!-- Existing choices -->\n        <ul class=\"list-group mb-3\">\n          <li v-for=\"(choice, index) in choices\" :key=\"index\" class=\"list-group-item d-flex justify-content-between align-items-center\">\n            {{ choice }}\n            <button class=\"btn btn-danger btn-sm\" @click=\"removeChoice(index)\">Remove</button>\n          </li>\n        </ul>\n\n        <!-- Add new choice -->\n        <div class=\"mb-3\">\n          <div class=\"input-group\">\n            <input\n              v-model=\"newChoice\"\n              class=\"form-control custom-input\"\n              placeholder=\"Enter a new option\"\n              @keyup.enter=\"addChoice\"\n            />\n            <button class=\"btn btn-primary\" @click=\"addChoice\" :disabled=\"!newChoice\">Add Option</button>\n          </div>\n        </div>\n\n        <!-- Submit button -->\n        <div class=\"text-center mt-4\">\n          <button @click=\"nextStep\" class=\"btn btn-success btn-lg\" :disabled=\"choices.length < 2\">\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"EnterChoicesStep\",\n  setup() {\n    const store = useStore();\n    const decision = ref(\"\");\n    const newChoice = ref(\"\");\n    const choices = computed(() => store.state.choices);\n    const decisionQuestion = ref('')\n    \n\n    const addChoice = () => {\n      if (newChoice.value) {\n        store.commit(\"addChoice\", newChoice.value);\n        newChoice.value = \"\";\n      }\n    };\n\n    const removeChoice = (index) => {\n      store.commit(\"removeChoice\", index);\n    };\n\n    const updateDecisionQuestion = () => {\n      store.dispatch('setDecisionQuestion', decisionQuestion.value)\n    }\n    const nextStep = () => {\n      store.commit(\"setDecision\", decision.value);\n      store.commit(\"setCurrentStep\", 3);\n    };\n\n    return {\n      decision,\n      newChoice,\n      choices,\n      addChoice,\n      removeChoice,\n      nextStep,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.enter-choices-step {\n  padding: 2rem;\n\n  h3, h4 {\n    color: #111418;\n    font-weight: bold;\n  }\n\n  .custom-input {\n    background-color: #f0f2f4;\n    border: none;\n    border-radius: 0.75rem;\n    padding: 0.75rem 1rem;\n    color: #111418;\n\n    &::placeholder {\n      color: #637588;\n    }\n\n    &:focus {\n      box-shadow: none;\n      outline: none;\n    }\n  }\n\n  .btn {\n    border-radius: 0.75rem;\n    font-weight: bold;\n  }\n\n  .btn-success {\n    background-color: #1568c1;\n    border-color: #1568c1;\n  }\n\n  .list-group-item {\n    background-color: #f0f2f4;\n    border: none;\n    border-radius: 0.75rem;\n    margin-bottom: 0.5rem;\n  }\n}\n</style>"],"mappings":"AAmDA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,QAAO,GAAIN,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMO,SAAQ,GAAIP,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMQ,OAAM,GAAIP,QAAQ,CAAC,MAAMI,KAAK,CAACI,KAAK,CAACD,OAAO,CAAC;IACnD,MAAME,gBAAe,GAAIV,GAAG,CAAC,EAAE;IAG/B,MAAMW,SAAQ,GAAIA,CAAA,KAAM;MACtB,IAAIJ,SAAS,CAACK,KAAK,EAAE;QACnBP,KAAK,CAACQ,MAAM,CAAC,WAAW,EAAEN,SAAS,CAACK,KAAK,CAAC;QAC1CL,SAAS,CAACK,KAAI,GAAI,EAAE;MACtB;IACF,CAAC;IAED,MAAME,YAAW,GAAKC,KAAK,IAAK;MAC9BV,KAAK,CAACQ,MAAM,CAAC,cAAc,EAAEE,KAAK,CAAC;IACrC,CAAC;IAED,MAAMC,sBAAqB,GAAIA,CAAA,KAAM;MACnCX,KAAK,CAACY,QAAQ,CAAC,qBAAqB,EAAEP,gBAAgB,CAACE,KAAK;IAC9D;IACA,MAAMM,QAAO,GAAIA,CAAA,KAAM;MACrBb,KAAK,CAACQ,MAAM,CAAC,aAAa,EAAEP,QAAQ,CAACM,KAAK,CAAC;MAC3CP,KAAK,CAACQ,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;IACnC,CAAC;IAED,OAAO;MACLP,QAAQ;MACRC,SAAS;MACTC,OAAO;MACPG,SAAS;MACTG,YAAY;MACZI;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}