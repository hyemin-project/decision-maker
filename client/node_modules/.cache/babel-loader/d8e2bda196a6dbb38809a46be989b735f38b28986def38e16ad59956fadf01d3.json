{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport api from '@/services/api';\nexport default {\n  name: 'SignUpPage',\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const username = ref('');\n    const email = ref('');\n    const password = ref('');\n    const error = ref('');\n    const isLoading = ref(false);\n    const recaptchaContainer = ref(null);\n    const recaptchaWidget = ref(null);\n    const isFormValid = computed(() => {\n      return username.value.length > 0 && email.value.includes('@') && password.value.length >= 8;\n    });\n    onMounted(() => {\n      if (window.grecaptcha) {\n        window.grecaptcha.ready(() => {\n          recaptchaWidget.value = window.grecaptcha.render(recaptchaContainer.value, {\n            sitekey: 'your-actual-site-key-here'\n          });\n        });\n      } else {\n        console.error('reCAPTCHA not loaded');\n        error.value = 'An error occurred. Please try again later.';\n      }\n    });\n    const signUp = async () => {\n      isLoading.value = true;\n      error.value = '';\n      try {\n        const token = window.grecaptcha.getResponse(recaptchaWidget.value);\n        if (!token) {\n          throw new Error('Please complete the reCAPTCHA');\n        }\n        const response = await api.signup({\n          username: username.value,\n          email: email.value,\n          password: password.value,\n          recaptchaToken: token\n        });\n        console.log('SignUp successful:', response);\n        await store.dispatch('setUser', response.user);\n        localStorage.setItem('token', response.token);\n        router.push('/');\n      } catch (e) {\n        console.error('Sign up error:', e);\n        if (e.response?.status === 409) {\n          error.value = 'Email already in use. Please use a different email.';\n        } else if (e.message === 'Please complete the reCAPTCHA') {\n          error.value = e.message;\n        } else {\n          error.value = 'Sign up failed. Please try again.';\n        }\n      } finally {\n        isLoading.value = false;\n        window.grecaptcha.reset(recaptchaWidget.value);\n      }\n    };\n    return {\n      username,\n      email,\n      password,\n      error,\n      isLoading,\n      signUp,\n      recaptchaContainer,\n      isFormValid\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRouter","useStore","api","name","setup","router","store","username","email","password","error","isLoading","recaptchaContainer","recaptchaWidget","isFormValid","value","length","includes","window","grecaptcha","ready","render","sitekey","console","signUp","token","getResponse","Error","response","signup","recaptchaToken","log","dispatch","user","localStorage","setItem","push","e","status","message","reset"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/SignUp.vue"],"sourcesContent":["<template>\n  <div class=\"container sign-up-page\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12 col-md-6 col-lg-4\">\n        <h2 class=\"text-center mb-4\">Sign Up</h2>\n        <form @submit.prevent=\"signUp\">\n          <div class=\"mb-3\">\n            <label for=\"username\" class=\"form-label\">Username</label>\n            <input type=\"text\" class=\"form-control custom-input\" id=\"username\" v-model=\"username\" required>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Email address</label>\n            <input type=\"email\" class=\"form-control custom-input\" id=\"email\" v-model=\"email\" required>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <input type=\"password\" class=\"form-control custom-input\" id=\"password\" v-model=\"password\" required>\n          </div>\n          <div class=\"mb-3\">\n            <div ref=\"recaptchaContainer\"></div>\n          </div>\n          <div class=\"d-grid\">\n            <button type=\"submit\" class=\"btn btn-primary btn-lg\" :disabled=\"isLoading || !isFormValid\">\n              {{ isLoading ? 'Signing Up...' : 'Sign Up' }}\n            </button>\n          </div>\n        </form>\n        <p v-if=\"error\" class=\"text-danger mt-3\">{{ error }}</p>\n        <p class=\"mt-3 text-center\">\n          Already have an account? <router-link to=\"/login\">Login</router-link>\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport api from '@/services/api';\n\nexport default {\n  name: 'SignUpPage',\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const username = ref('');\n    const email = ref('');\n    const password = ref('');\n    const error = ref('');\n    const isLoading = ref(false);\n    const recaptchaContainer = ref(null);\n    const recaptchaWidget = ref(null);\n\n    const isFormValid = computed(() => {\n      return username.value.length > 0 &&\n             email.value.includes('@') &&\n             password.value.length >= 8;\n    });\n\n    onMounted(() => {\n      if (window.grecaptcha) {\n        window.grecaptcha.ready(() => {\n          recaptchaWidget.value = window.grecaptcha.render(recaptchaContainer.value, {\n            sitekey: 'your-actual-site-key-here'\n          });\n        });\n      } else {\n        console.error('reCAPTCHA not loaded');\n        error.value = 'An error occurred. Please try again later.';\n      }\n    });\n\n    const signUp = async () => {\n      isLoading.value = true;\n      error.value = '';\n      try {\n        const token = window.grecaptcha.getResponse(recaptchaWidget.value);\n        if (!token) {\n          throw new Error('Please complete the reCAPTCHA');\n        }\n        const response = await api.signup({\n          username: username.value,\n          email: email.value,\n          password: password.value,\n          recaptchaToken: token\n        });\n        console.log('SignUp successful:', response);\n        \n        await store.dispatch('setUser', response.user);\n        localStorage.setItem('token', response.token);\n        \n        router.push('/');\n      } catch (e) {\n        console.error('Sign up error:', e);\n        if (e.response?.status === 409) {\n          error.value = 'Email already in use. Please use a different email.';\n        } else if (e.message === 'Please complete the reCAPTCHA') {\n          error.value = e.message;\n        } else {\n          error.value = 'Sign up failed. Please try again.';\n        }\n      } finally {\n        isLoading.value = false;\n        window.grecaptcha.reset(recaptchaWidget.value);\n      }\n    };\n\n    return {\n      username,\n      email,\n      password,\n      error,\n      isLoading,\n      signUp,\n      recaptchaContainer,\n      isFormValid\n    };\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n// ... (your existing styles)\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}