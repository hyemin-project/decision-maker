{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport api from '@/services/api'; // Make sure this import is correct\n\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const email = ref('');\n    const password = ref('');\n    const error = ref('');\n    const isLoading = ref(false);\n    const login = async () => {\n      isLoading.value = true;\n      error.value = '';\n      try {\n        const response = await api.login({\n          email: email.value,\n          password: password.value\n        });\n        console.log('Login successful:', response);\n\n        // Assuming the API returns user data and token\n        await store.dispatch('setUser', response.user);\n        localStorage.setItem('token', response.token);\n        router.push('/'); // Redirect to home page after successful login\n      } catch (e) {\n        console.error('Login error:', e);\n        error.value = e.response?.data?.error || 'Login failed. Please try again.';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n    return {\n      email,\n      password,\n      error,\n      isLoading,\n      login\n    };\n  }\n};","map":{"version":3,"names":["ref","useStore","useRouter","api","name","setup","store","router","email","password","error","isLoading","login","value","response","console","log","dispatch","user","localStorage","setItem","token","push","e","data"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"container login-page\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-12 col-md-6 col-lg-4\">\n          <h2 class=\"text-center mb-4\">Login</h2>\n          <form @submit.prevent=\"login\">\n            <div class=\"mb-3\">\n              <label for=\"email\" class=\"form-label\">Email address</label>\n              <input type=\"email\" class=\"form-control custom-input\" id=\"email\" v-model=\"email\" required>\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"password\" class=\"form-label\">Password</label>\n              <input type=\"password\" class=\"form-control custom-input\" id=\"password\" v-model=\"password\" required>\n            </div>\n            <div class=\"d-grid\">\n              <button type=\"submit\" class=\"btn btn-primary btn-lg\" :disabled=\"isLoading\">\n                {{ isLoading ? 'Logging in...' : 'Login' }}\n              </button>\n            </div>\n          </form>\n          <p v-if=\"error\" class=\"text-danger mt-3\">{{ error }}</p>\n          <p class=\"mt-3 text-center\">\n            Don't have an account? <router-link to=\"/signup\">Sign Up</router-link>\n          </p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport api from '@/services/api';  // Make sure this import is correct\n\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const email = ref('');\n    const password = ref('');\n    const error = ref('');\n    const isLoading = ref(false);\n\n    const login = async () => {\n      isLoading.value = true;\n      error.value = '';\n      try {\n        const response = await api.login({\n          email: email.value,\n          password: password.value\n        });\n        console.log('Login successful:', response);\n        \n        // Assuming the API returns user data and token\n        await store.dispatch('setUser', response.user);\n        localStorage.setItem('token', response.token);\n        \n        router.push('/');  // Redirect to home page after successful login\n      } catch (e) {\n        console.error('Login error:', e);\n        error.value = e.response?.data?.error || 'Login failed. Please try again.';\n      } finally {\n        isLoading.value = false;\n      }\n    };\n\n    return { email, password, error, isLoading, login };\n  }\n}\n</script>\n  \n  <style lang=\"scss\" scoped>\n  .login-page {\n    padding: 2rem;\n  \n    .custom-input {\n      background-color: #f0f2f4;\n      border: none;\n      border-radius: 0.75rem;\n      padding: 0.75rem 1rem;\n      color: #111418;\n  \n      &:focus {\n        box-shadow: none;\n        outline: none;\n      }\n    }\n  \n    .btn-primary {\n      background-color: #1568c1;\n      border-color: #1568c1;\n      border-radius: 0.75rem;\n      font-weight: bold;\n    }\n  }\n  </style>"],"mappings":";AA8BA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,GAAE,MAAO,gBAAgB,EAAG;;AAEnC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,MAAMM,MAAK,GAAIL,SAAS,CAAC,CAAC;IAC1B,MAAMM,KAAI,GAAIR,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMS,QAAO,GAAIT,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMU,KAAI,GAAIV,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMW,SAAQ,GAAIX,GAAG,CAAC,KAAK,CAAC;IAE5B,MAAMY,KAAI,GAAI,MAAAA,CAAA,KAAY;MACxBD,SAAS,CAACE,KAAI,GAAI,IAAI;MACtBH,KAAK,CAACG,KAAI,GAAI,EAAE;MAChB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,GAAG,CAACS,KAAK,CAAC;UAC/BJ,KAAK,EAAEA,KAAK,CAACK,KAAK;UAClBJ,QAAQ,EAAEA,QAAQ,CAACI;QACrB,CAAC,CAAC;QACFE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;;QAE1C;QACA,MAAMR,KAAK,CAACW,QAAQ,CAAC,SAAS,EAAEH,QAAQ,CAACI,IAAI,CAAC;QAC9CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACO,KAAK,CAAC;QAE7Cd,MAAM,CAACe,IAAI,CAAC,GAAG,CAAC,EAAG;MACrB,EAAE,OAAOC,CAAC,EAAE;QACVR,OAAO,CAACL,KAAK,CAAC,cAAc,EAAEa,CAAC,CAAC;QAChCb,KAAK,CAACG,KAAI,GAAIU,CAAC,CAACT,QAAQ,EAAEU,IAAI,EAAEd,KAAI,IAAK,iCAAiC;MAC5E,UAAU;QACRC,SAAS,CAACE,KAAI,GAAI,KAAK;MACzB;IACF,CAAC;IAED,OAAO;MAAEL,KAAK;MAAEC,QAAQ;MAAEC,KAAK;MAAEC,SAAS;MAAEC;IAAM,CAAC;EACrD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}