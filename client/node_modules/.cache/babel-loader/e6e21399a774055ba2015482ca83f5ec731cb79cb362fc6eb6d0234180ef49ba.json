{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport api from '@/services/api';\nexport default createStore({\n  state: {\n    currentStep: 1,\n    choices: [],\n    probabilities: [],\n    wheelCustomization: {},\n    result: null,\n    user: null,\n    decisionQuestion: '',\n    decisionHistory: [],\n    loading: false,\n    error: null\n  },\n  mutations: {\n    setDecisionHistory(state, history) {\n      state.decisionHistory = history;\n    },\n    setLoading(state, isLoading) {\n      state.loading = isLoading;\n    },\n    setError(state, error) {\n      state.error = error;\n    },\n    setUser(state, user) {\n      state.user = user;\n    },\n    setCurrentStep(state, step) {\n      state.currentStep = step;\n    },\n    addChoice(state, choice) {\n      state.choices.push(choice);\n    },\n    removeChoice(state, index) {\n      state.choices.splice(index, 1);\n      if (state.probabilities.length > index) {\n        state.probabilities.splice(index, 1);\n      }\n    },\n    setProbabilities(state, probabilities) {\n      state.probabilities = probabilities;\n    },\n    setWheelCustomization(state, customization) {\n      state.wheelCustomization = customization;\n    },\n    setResult(state, result) {\n      state.result = result;\n    },\n    resetDecision(state) {\n      state.choices = [];\n      state.probabilities = [];\n      state.wheelCustomization = {};\n      state.result = null;\n    },\n    setDecisionQuestion(state, decisionQuestion) {\n      state.decisionQuestion = decisionQuestion;\n    }\n  },\n  actions: {\n    fetchDecisionHistory({\n      commit\n    }) {\n      return api.getDecisionHistory().then(response => {\n        commit('setDecisionHistory', response.data);\n      }).catch(error => {\n        console.error('Error in fetchDecisionHistory:', error);\n        // Handle the error, e.g., commit an error state\n        throw error; // Re-throw the error to be caught in the component\n      });\n    },\n    setUser({\n      commit\n    }, user) {\n      commit('setUser', user);\n    },\n    setDecisionQuestion({\n      commit\n    }, decisionQuestion) {\n      commit('setDecisionQuestion', decisionQuestion);\n    },\n    async fetchChoices({\n      commit\n    }) {\n      const choices = await api.getChoices();\n      commit('setChoices', choices);\n    },\n    async createChoice({\n      commit\n    }, choice) {\n      const newChoice = await api.addChoice(choice);\n      commit('addChoice', newChoice);\n    },\n    async login({\n      commit\n    }, {\n      email,\n      password\n    }) {\n      try {\n        const response = await api.login({\n          email,\n          password\n        });\n        commit('setUser', response.user);\n        localStorage.setItem('token', response.token);\n      } catch (error) {\n        console.error('Login failed:', error);\n        throw error;\n      }\n    },\n    async logout({\n      commit\n    }) {\n      commit('setUser', null);\n      localStorage.removeItem('token');\n    },\n    async signUp({\n      commit\n    }, {\n      username,\n      email,\n      password\n    }) {\n      try {\n        const response = await api.signup({\n          username,\n          email,\n          password\n        });\n        commit('setUser', response.user);\n        localStorage.setItem('token', response.token);\n      } catch (error) {\n        console.error('Sign up failed:', error);\n        throw error;\n      }\n    },\n    async saveResult({\n      state\n    }) {\n      try {\n        const savedResult = await api.saveResult({\n          result: state.result,\n          choices: state.choices,\n          probabilities: state.probabilities,\n          decision: state.decision,\n          userId: state.user ? state.user.id : null\n        });\n        return savedResult;\n      } catch (error) {\n        console.error('Failed to save result:', error);\n        throw error;\n      }\n    },\n    async checkAuth({\n      commit\n    }) {\n      try {\n        const userData = await api.verifyToken();\n        if (userData && userData.user) {\n          commit('setUser', userData.user);\n        } else {\n          commit('setUser', null);\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        commit('setUser', null);\n      }\n    }\n  },\n  modules: {\n    // Add modules if needed\n  }\n});","map":{"version":3,"names":["createStore","api","state","currentStep","choices","probabilities","wheelCustomization","result","user","decisionQuestion","decisionHistory","loading","error","mutations","setDecisionHistory","history","setLoading","isLoading","setError","setUser","setCurrentStep","step","addChoice","choice","push","removeChoice","index","splice","length","setProbabilities","setWheelCustomization","customization","setResult","resetDecision","setDecisionQuestion","actions","fetchDecisionHistory","commit","getDecisionHistory","then","response","data","catch","console","fetchChoices","getChoices","createChoice","newChoice","login","email","password","localStorage","setItem","token","logout","removeItem","signUp","username","signup","saveResult","savedResult","decision","userId","id","checkAuth","userData","verifyToken","modules"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport api from '@/services/api'\n\nexport default createStore({\n  state: {\n    currentStep: 1,\n    choices: [],\n    probabilities: [],\n    wheelCustomization: {},\n    result: null,\n    user: null,\n    decisionQuestion: '',\n    decisionHistory: [],\n    loading: false,\n    error: null\n  },\n  mutations: {\n    setDecisionHistory(state, history) {\n      state.decisionHistory = history\n    },\n    setLoading(state, isLoading) {\n      state.loading = isLoading\n    },\n    setError(state, error) {\n      state.error = error\n    }\n    ,\n    setUser(state, user) {\n      state.user = user;\n    },\n    setCurrentStep(state, step) {\n      state.currentStep = step\n    },\n    addChoice(state, choice) {\n      state.choices.push(choice)\n    },\n    removeChoice(state, index) {\n      state.choices.splice(index, 1)\n      if (state.probabilities.length > index) {\n        state.probabilities.splice(index, 1)\n      }\n    },\n    setProbabilities(state, probabilities) {\n      state.probabilities = probabilities\n    },\n    setWheelCustomization(state, customization) {\n      state.wheelCustomization = customization\n    },\n    setResult(state, result) {\n      state.result = result\n    },\n    resetDecision(state) {\n      state.choices = []\n      state.probabilities = []\n      state.wheelCustomization = {}\n      state.result = null\n    },\n    setDecisionQuestion(state, decisionQuestion){\n      state.decisionQuestion = decisionQuestion\n    }\n  },\n  actions: {\n    fetchDecisionHistory({ commit }) {\n      return api.getDecisionHistory()\n        .then(response => {\n          commit('setDecisionHistory', response.data);\n        })\n        .catch(error => {\n          console.error('Error in fetchDecisionHistory:', error);\n          // Handle the error, e.g., commit an error state\n          throw error; // Re-throw the error to be caught in the component\n        });\n    }\n    \n    ,\n    setUser({ commit }, user) {\n      commit('setUser', user)\n    },\n\n    setDecisionQuestion({commit}, decisionQuestion){\n      commit('setDecisionQuestion', decisionQuestion)\n    },\n\n    async fetchChoices({ commit }) {\n      const choices = await api.getChoices();\n      commit('setChoices', choices);\n    },\n    async createChoice({ commit }, choice) {\n      const newChoice = await api.addChoice(choice);\n      commit('addChoice', newChoice);\n    },\n    async login({ commit }, { email, password }) {\n      try {\n        const response = await api.login({ email, password });\n        commit('setUser', response.user);\n        localStorage.setItem('token', response.token);\n      } catch (error) {\n        console.error('Login failed:', error);\n        throw error;\n      }\n    },\n    async logout({ commit }) {\n      commit('setUser', null);\n      localStorage.removeItem('token');\n    },\n    async signUp({ commit }, { username, email, password }) {\n      try {\n        const response = await api.signup({ username, email, password });\n        commit('setUser', response.user);\n        localStorage.setItem('token', response.token);\n      } catch (error) {\n        console.error('Sign up failed:', error);\n        throw error;\n      }\n    },\n    async saveResult({ state }) {\n      try {\n        const savedResult = await api.saveResult({\n          result: state.result,\n          choices: state.choices,\n          probabilities: state.probabilities,\n          decision: state.decision,\n          userId: state.user ? state.user.id : null\n        });\n        return savedResult;\n      } catch (error) {\n        console.error('Failed to save result:', error);\n        throw error;\n      }\n    },\n    async checkAuth({ commit }) {\n      try {\n        const userData = await api.verifyToken();\n        if (userData && userData.user) {\n          commit('setUser', userData.user);\n        } else {\n          commit('setUser', null);\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        commit('setUser', null);\n      }\n    }\n  },\n  modules: {\n    // Add modules if needed\n  },\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}