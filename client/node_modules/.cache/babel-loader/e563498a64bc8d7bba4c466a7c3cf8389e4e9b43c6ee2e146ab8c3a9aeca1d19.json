{"ast":null,"code":"import { ref, computed, onMounted, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  name: \"SpinWheelStep\",\n  setup() {\n    const store = useStore();\n    const wheelCanvas = ref(null);\n    const isSpinning = ref(false);\n    const rotation = ref(0);\n    const choices = computed(() => store.state.choices);\n    const customization = computed(() => store.state.wheelCustomization);\n    const drawWheel = () => {\n      const canvas = wheelCanvas.value;\n      const ctx = canvas.getContext(\"2d\");\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      const radius = Math.min(centerX, centerY) - 10;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.translate(centerX, centerY);\n      ctx.rotate(rotation.value);\n      const totalChoices = choices.value.length;\n      const anglePerChoice = 2 * Math.PI / totalChoices;\n      choices.value.forEach((choice, index) => {\n        const startAngle = index * anglePerChoice;\n        const endAngle = (index + 1) * anglePerChoice;\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.arc(0, 0, radius, startAngle, endAngle);\n        ctx.closePath();\n        let color = choice.color || `hsl(${index * 137.5 % 360}, 70%, 50%)`;\n        ctx.fillStyle = color;\n        ctx.fill();\n\n        // Draw text\n        ctx.save();\n        ctx.rotate(startAngle + anglePerChoice / 2);\n        ctx.textAlign = \"right\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"white\";\n        ctx.font = \"bold 16px Arial\";\n        ctx.fillText(choice.text, radius - 20, 0);\n        ctx.restore();\n      });\n      ctx.restore();\n    };\n    const spinWheel = () => {\n      if (isSpinning.value) return;\n      isSpinning.value = true;\n      const totalRotation = 2 * Math.PI * (5 + Math.random()); // 5-6 full rotations\n      const duration = 5000; // 5 seconds\n      const start = performance.now();\n      const animate = time => {\n        const elapsed = time - start;\n        const progress = Math.min(elapsed / duration, 1);\n        const easeProgress = 1 - Math.pow(1 - progress, 4); // Ease out quartic\n\n        rotation.value = totalRotation * easeProgress;\n        drawWheel();\n        if (progress < 1) {\n          requestAnimationFrame(animate);\n        } else {\n          const normalizedRotation = rotation.value % (2 * Math.PI);\n          const choiceIndex = Math.floor(choices.value.length * (1 - normalizedRotation / (2 * Math.PI))) % choices.value.length;\n          const result = choices.value[choiceIndex];\n          console.log(\"Final rotation:\", rotation.value);\n          console.log(\"Normalized rotation:\", normalizedRotation);\n          console.log(\"Choice index:\", choiceIndex);\n          console.log(\"Selected result:\", result.text);\n          store.commit(\"setResult\", result.text);\n          store.commit(\"setCurrentStep\", 6);\n          isSpinning.value = false;\n        }\n      };\n      requestAnimationFrame(animate);\n    };\n    onMounted(() => {\n      drawWheel();\n    });\n    watch([choices, customization], () => {\n      drawWheel();\n    });\n    return {\n      wheelCanvas,\n      isSpinning,\n      spinWheel\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","watch","useStore","name","setup","store","wheelCanvas","isSpinning","rotation","choices","state","customization","wheelCustomization","drawWheel","canvas","value","ctx","getContext","centerX","width","centerY","height","radius","Math","min","clearRect","save","translate","rotate","totalChoices","length","anglePerChoice","PI","forEach","choice","index","startAngle","endAngle","beginPath","moveTo","arc","closePath","color","fillStyle","fill","textAlign","textBaseline","font","fillText","text","restore","spinWheel","totalRotation","random","duration","start","performance","now","animate","time","elapsed","progress","easeProgress","pow","requestAnimationFrame","normalizedRotation","choiceIndex","floor","result","console","log","commit"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/SpinWheelStep.vue"],"sourcesContent":["<template>\n  <div class=\"container spin-wheel-step\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12 text-center\">\n        <h2>Spin the Wheel</h2>\n      </div>\n      <div class=\"col-12\">\n        <div class=\"wheel-container\">\n          <canvas ref=\"wheelCanvas\" width=\"400\" height=\"400\"></canvas>\n          <div class=\"wheel-arrow\"></div>\n        </div>\n      </div>\n      <div class=\"col-12 text-center\">\n        <button class=\"btn btn-primary mt-3\" @click=\"spinWheel\" :disabled=\"isSpinning\">\n          {{ isSpinning ? \"Spinning...\" : \"Spin\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"SpinWheelStep\",\n  setup() {\n    const store = useStore();\n    const wheelCanvas = ref(null);\n    const isSpinning = ref(false);\n    const rotation = ref(0);\n    const choices = computed(() => store.state.choices);\n    const customization = computed(() => store.state.wheelCustomization);\n\n    const drawWheel = () => {\n      const canvas = wheelCanvas.value;\n      const ctx = canvas.getContext(\"2d\");\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      const radius = Math.min(centerX, centerY) - 10;\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      ctx.translate(centerX, centerY);\n      ctx.rotate(rotation.value);\n\n      const totalChoices = choices.value.length;\n      const anglePerChoice = (2 * Math.PI) / totalChoices;\n\n      choices.value.forEach((choice, index) => {\n        const startAngle = index * anglePerChoice;\n        const endAngle = (index + 1) * anglePerChoice;\n\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.arc(0, 0, radius, startAngle, endAngle);\n        ctx.closePath();\n\n        let color = choice.color || `hsl(${(index * 137.5) % 360}, 70%, 50%)`;\n        ctx.fillStyle = color;\n        ctx.fill();\n\n        // Draw text\n        ctx.save();\n        ctx.rotate(startAngle + anglePerChoice / 2);\n        ctx.textAlign = \"right\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"white\";\n        ctx.font = \"bold 16px Arial\";\n        ctx.fillText(choice.text, radius - 20, 0);\n        ctx.restore();\n      });\n\n      ctx.restore();\n    };\n\n    const spinWheel = () => {\n      if (isSpinning.value) return;\n\n      isSpinning.value = true;\n      const totalRotation = 2 * Math.PI * (5 + Math.random()); // 5-6 full rotations\n      const duration = 5000; // 5 seconds\n      const start = performance.now();\n\n      const animate = (time) => {\n        const elapsed = time - start;\n        const progress = Math.min(elapsed / duration, 1);\n        const easeProgress = 1 - Math.pow(1 - progress, 4); // Ease out quartic\n\n        rotation.value = totalRotation * easeProgress;\n\n        drawWheel();\n\n        if (progress < 1) {\n          requestAnimationFrame(animate);\n        } else {\n          const normalizedRotation = rotation.value % (2 * Math.PI);\n          const choiceIndex = Math.floor(choices.value.length * (1 - (normalizedRotation / (2 * Math.PI)))) % choices.value.length;\n          const result = choices.value[choiceIndex];\n\n          console.log(\"Final rotation:\", rotation.value);\n          console.log(\"Normalized rotation:\", normalizedRotation);\n          console.log(\"Choice index:\", choiceIndex);\n          console.log(\"Selected result:\", result.text);\n\n          store.commit(\"setResult\", result.text);\n          store.commit(\"setCurrentStep\", 6);\n          isSpinning.value = false;\n        }\n      };\n\n      requestAnimationFrame(animate);\n    };\n\n    onMounted(() => {\n      drawWheel();\n    });\n\n    watch([choices, customization], () => {\n      drawWheel();\n    });\n\n    return {\n      wheelCanvas,\n      isSpinning,\n      spinWheel,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.spin-wheel-step {\n  padding: 2rem;\n}\n\n.wheel-container {\n  position: relative;\n  width: 400px;\n  height: 400px;\n  margin: 0 auto;\n}\n\n.wheel-arrow {\n  position: absolute;\n  top: 50%;\n  right: -40px;\n  width: 0;\n  height: 0;\n  border-top: 20px solid transparent;\n  border-bottom: 20px solid transparent;\n  border-left: 40px solid #333;\n  transform: translateY(-50%);\n}\n\nbutton {\n  margin-top: 20px;\n  padding: 10px 20px;\n  font-size: 18px;\n  cursor: pointer;\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}