{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport api from '@/services/api';\nexport default {\n  name: 'ResultsStep',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const result = computed(() => store.state.result);\n    const choices = computed(() => store.state.choices);\n    const showShareOptions = ref(false);\n    const isSaving = ref(false);\n    const saveMessage = ref('');\n    const isLoggedIn = computed(() => !!store.state.user);\n\n    // ... other computed properties and methods remain the same ...\n\n    const saveResult = async () => {\n      if (isSaving.value) return;\n      isSaving.value = true;\n      saveMessage.value = '';\n      try {\n        const savedResult = await api.saveResult({\n          result: result.value,\n          choices: choices.value\n        });\n        console.log('Result saved:', savedResult);\n        saveMessage.value = 'Result saved successfully!';\n      } catch (error) {\n        console.error('Error saving result:', error);\n        saveMessage.value = 'Failed to save result. Please try again.';\n      } finally {\n        isSaving.value = false;\n        setTimeout(() => {\n          saveMessage.value = '';\n        }, 3000); // Clear message after 3 seconds\n      }\n    };\n    const promptLogin = () => {\n      router.push('/login');\n    };\n    return {\n      result,\n      choices,\n      resultColor,\n      showShareOptions,\n      spinAgain,\n      newDecision,\n      shareResult,\n      shareVia,\n      saveResult,\n      isSaving,\n      saveMessage,\n      isLoggedIn,\n      promptLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","useStore","useRouter","api","name","setup","store","router","result","state","choices","showShareOptions","isSaving","saveMessage","isLoggedIn","user","saveResult","value","savedResult","console","log","error","setTimeout","promptLogin","push","resultColor","spinAgain","newDecision","shareResult","shareVia"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/ResultsStep.vue"],"sourcesContent":["<template>\n  <div class=\"container results-step\">\n    <!-- ... other content remains the same ... -->\n    <div class=\"col-12 text-center mt-3 action-buttons\">\n      <button class=\"btn btn-primary me-2\" @click=\"spinAgain\">Spin Again</button>\n      <button class=\"btn btn-warning me-2\" @click=\"newDecision\">New Decision</button>\n      <button class=\"btn btn-success me-2\" @click=\"shareResult\">Share Result</button>\n      <button v-if=\"isLoggedIn\" class=\"btn btn-info\" @click=\"saveResult\" :disabled=\"isSaving\">\n        {{ isSaving ? 'Saving...' : 'Save Result' }}\n      </button>\n      <button v-else class=\"btn btn-secondary\" @click=\"promptLogin\">Login to Save</button>\n    </div>\n    <!-- ... rest of the template remains the same ... -->\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\nimport api from '@/services/api' \n\nexport default {\n  name: 'ResultsStep',\n  setup() {\n    const store = useStore()\n    const router = useRouter()\n    const result = computed(() => store.state.result)\n    const choices = computed(() => store.state.choices)\n    const showShareOptions = ref(false)\n    const isSaving = ref(false)\n    const saveMessage = ref('')\n    const isLoggedIn = computed(() => !!store.state.user)\n\n    // ... other computed properties and methods remain the same ...\n\n    const saveResult = async () => {\n      if (isSaving.value) return;\n      isSaving.value = true;\n      saveMessage.value = '';\n      try {\n        const savedResult = await api.saveResult({\n          result: result.value,\n          choices: choices.value\n        });\n        console.log('Result saved:', savedResult);\n        saveMessage.value = 'Result saved successfully!';\n      } catch (error) {\n        console.error('Error saving result:', error);\n        saveMessage.value = 'Failed to save result. Please try again.';\n      } finally {\n        isSaving.value = false;\n        setTimeout(() => {\n          saveMessage.value = '';\n        }, 3000); // Clear message after 3 seconds\n      }\n    }\n\n    const promptLogin = () => {\n      router.push('/login');\n    }\n\n    return {\n      result,\n      choices,\n      resultColor,\n      showShareOptions,\n      spinAgain,\n      newDecision,\n      shareResult,\n      shareVia,\n      saveResult,\n      isSaving,\n      saveMessage,\n      isLoggedIn,\n      promptLogin\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n// ... styles remain the same ...\n</style>"],"mappings":";AAiBA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AACrC,OAAOC,GAAE,MAAO,gBAAe;AAE/B,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC;IACvB,MAAMM,MAAK,GAAIL,SAAS,CAAC;IACzB,MAAMM,MAAK,GAAIR,QAAQ,CAAC,MAAMM,KAAK,CAACG,KAAK,CAACD,MAAM;IAChD,MAAME,OAAM,GAAIV,QAAQ,CAAC,MAAMM,KAAK,CAACG,KAAK,CAACC,OAAO;IAClD,MAAMC,gBAAe,GAAIZ,GAAG,CAAC,KAAK;IAClC,MAAMa,QAAO,GAAIb,GAAG,CAAC,KAAK;IAC1B,MAAMc,WAAU,GAAId,GAAG,CAAC,EAAE;IAC1B,MAAMe,UAAS,GAAId,QAAQ,CAAC,MAAM,CAAC,CAACM,KAAK,CAACG,KAAK,CAACM,IAAI;;IAEpD;;IAEA,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAIJ,QAAQ,CAACK,KAAK,EAAE;MACpBL,QAAQ,CAACK,KAAI,GAAI,IAAI;MACrBJ,WAAW,CAACI,KAAI,GAAI,EAAE;MACtB,IAAI;QACF,MAAMC,WAAU,GAAI,MAAMf,GAAG,CAACa,UAAU,CAAC;UACvCR,MAAM,EAAEA,MAAM,CAACS,KAAK;UACpBP,OAAO,EAAEA,OAAO,CAACO;QACnB,CAAC,CAAC;QACFE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,WAAW,CAAC;QACzCL,WAAW,CAACI,KAAI,GAAI,4BAA4B;MAClD,EAAE,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CR,WAAW,CAACI,KAAI,GAAI,0CAA0C;MAChE,UAAU;QACRL,QAAQ,CAACK,KAAI,GAAI,KAAK;QACtBK,UAAU,CAAC,MAAM;UACfT,WAAW,CAACI,KAAI,GAAI,EAAE;QACxB,CAAC,EAAE,IAAI,CAAC,EAAE;MACZ;IACF;IAEA,MAAMM,WAAU,GAAIA,CAAA,KAAM;MACxBhB,MAAM,CAACiB,IAAI,CAAC,QAAQ,CAAC;IACvB;IAEA,OAAO;MACLhB,MAAM;MACNE,OAAO;MACPe,WAAW;MACXd,gBAAgB;MAChBe,SAAS;MACTC,WAAW;MACXC,WAAW;MACXC,QAAQ;MACRb,UAAU;MACVJ,QAAQ;MACRC,WAAW;MACXC,UAAU;MACVS;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}