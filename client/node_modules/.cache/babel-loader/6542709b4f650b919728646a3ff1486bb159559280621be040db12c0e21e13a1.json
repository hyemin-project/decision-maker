{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"spin-wheel-step\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Spin the Wheel\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"wheel\",\n  ref: \"wheel\"\n};\nconst _hoisted_4 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" Implement wheel visualization here \")], 512 /* NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.spinWheel && $setup.spinWheel(...args)),\n    disabled: $setup.isSpinning\n  }, \"Spin\", 8 /* PROPS */, _hoisted_4)]);\n}","map":{"version":3,"names":["class","_createElementVNode","ref","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","onClick","_cache","args","$setup","spinWheel","disabled","isSpinning","_hoisted_4"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/ResultsStep.vue"],"sourcesContent":["<template>\n  <div class=\"spin-wheel-step\">\n    <h2>Spin the Wheel</h2>\n    <div class=\"wheel\" ref=\"wheel\">\n      <!-- Implement wheel visualization here -->\n    </div>\n    <button @click=\"spinWheel\" :disabled=\"isSpinning\">Spin</button>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'SpinWheelStep',\n  setup() {\n    const store = useStore()\n    const wheel = ref(null)\n    const isSpinning = ref(false)\n    const choices = computed(() => store.state.choices)\n    const customization = computed(() => store.state.wheelCustomization)\n\n    const spinWheel = () => {\n      isSpinning.value = true\n      // Implement wheel spinning animation here\n      setTimeout(() => {\n        const result = choices.value[Math.floor(Math.random() * choices.value.length)]\n        store.commit('setResult', result)\n        store.commit('setCurrentStep', 6)\n        isSpinning.value = false\n      }, 3000)\n    }\n\n    return {\n      wheel,\n      isSpinning,\n      choices,\n      customization,\n      spinWheel\n    }\n  }\n}\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;gCAC1BC,mBAAA,CAAuB,YAAnB,gBAAc;;EACbD,KAAK,EAAC,OAAO;EAACE,GAAG,EAAC;;mBAH3B;;uBACEC,mBAAA,CAMM,OANNC,UAMM,GALJC,UAAuB,EACvBJ,mBAAA,CAEM,OAFNK,UAEM,GADJC,mBAAA,wCAA2C,C,yBAE7CN,mBAAA,CAA+D;IAAtDO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,SAAA,IAAAD,MAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;IAAGG,QAAQ,EAAEF,MAAA,CAAAG;KAAY,MAAI,iBAN1DC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}