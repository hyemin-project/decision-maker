{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-af0ae7b6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container spectrum-step\"\n};\nconst _hoisted_2 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-12 text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", null, \"Choose from the Spectrum\")], -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"col-12\"\n};\nconst _hoisted_5 = {\n  class: \"spectrum-container\"\n};\nconst _hoisted_6 = {\n  class: \"spectrum-bar\"\n};\nconst _hoisted_7 = {\n  class: \"col-12 text-center\"\n};\nconst _hoisted_8 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.choices, (choice, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"spectrum-section\",\n      style: _normalizeStyle({\n        width: `${choice.probability}%`,\n        backgroundColor: choice.color\n      })\n    }, _toDisplayString(choice.text), 5 /* TEXT, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", {\n    class: \"pointer\",\n    style: _normalizeStyle({\n      left: `${$setup.pointerPosition}%`\n    })\n  }, null, 4 /* STYLE */)])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary mt-3\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.startSelection && $setup.startSelection(...args)),\n    disabled: $setup.isSelecting\n  }, _toDisplayString($setup.isSelecting ? \"Selecting...\" : \"Start\"), 9 /* TEXT, PROPS */, _hoisted_8)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","$setup","choices","choice","index","key","style","_normalizeStyle","width","probability","backgroundColor","color","text","left","pointerPosition","_hoisted_7","onClick","_cache","args","startSelection","disabled","isSelecting","_hoisted_8"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/SpinWheelStep.vue"],"sourcesContent":["<template>\n  <div class=\"container spectrum-step\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12 text-center\">\n        <h2>Choose from the Spectrum</h2>\n      </div>\n      <div class=\"col-12\">\n        <div class=\"spectrum-container\">\n          <div class=\"spectrum-bar\">\n            <div v-for=\"(choice, index) in choices\" :key=\"index\" \n                 class=\"spectrum-section\"\n                 :style=\"{ width: `${choice.probability}%`, backgroundColor: choice.color }\">\n              {{ choice.text }}\n            </div>\n          </div>\n          <div class=\"pointer\" :style=\"{ left: `${pointerPosition}%` }\"></div>\n        </div>\n      </div>\n      <div class=\"col-12 text-center\">\n        <button class=\"btn btn-primary mt-3\" @click=\"startSelection\" :disabled=\"isSelecting\">\n          {{ isSelecting ? \"Selecting...\" : \"Start\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"SpectrumStep\",\n  setup() {\n    const store = useStore();\n    const isSelecting = ref(false);\n    const pointerPosition = ref(0);\n    const selectedIndex = ref(null);\n    const choices = computed(() => store.state.choices);\n\n    const startSelection = () => {\n      if (isSelecting.value) return;\n\n      isSelecting.value = true;\n      let direction = 1;\n      let speed = 5;\n      let deceleration = 0.98;\n      let time = 0;\n      const containerWidth = document.querySelector('.spectrum-container').clientWidth;\n\n      const animate = () => {\n        pointerPosition.value += direction * speed;\n        if (pointerPosition.value <= 0 || pointerPosition.value >= containerWidth) {\n          direction *= -1;\n        }\n        speed *= deceleration;\n        time += 16;\n\n        if (speed > 0.1 && time < 5000) {\n          requestAnimationFrame(animate);\n        } else {\n          selectResult(containerWidth);\n        }\n      };\n\n      requestAnimationFrame(animate);\n    };\n\n    const selectResult = (containerWidth) => {\n      const percentage = (pointerPosition.value / containerWidth) * 100;\n      let accumulatedProbability = 0;\n      const result = choices.value.find((choice, index) => {\n        accumulatedProbability += choice.probability;\n        if (percentage <= accumulatedProbability) {\n          selectedIndex.value = index;\n          return true;\n        }\n        return false;\n      });\n\n      console.log(\"Selected result:\", result.text);\n      store.commit(\"setResult\", result.text);\n      store.commit(\"setCurrentStep\", 6);\n      isSelecting.value = false;\n    };\n\n    onMounted(() => {\n      // Initialize pointer at a random position\n      const containerWidth = document.querySelector('.spectrum-container').clientWidth;\n      pointerPosition.value = Math.random() * containerWidth;\n    });\n\n    return {\n      choices,\n      isSelecting,\n      pointerPosition,\n      selectedIndex,\n      startSelection,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.spectrum-step {\n  padding: 2rem;\n}\n\n.spectrum-container {\n  position: relative;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.spectrum-bar {\n  display: flex;\n}\n\n.spectrum-section {\n  text-align: center;\n  padding: 1rem;\n  color: white;\n}\n\n.pointer {\n  position: absolute;\n  top: 0;\n  width: 2px;\n  height: 100%;\n  background-color: red;\n}\n\nbutton {\n  margin-top: 20px;\n  padding: 10px 20px;\n  font-size: 18px;\n  cursor: pointer;\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAyB;;EAC7BA,KAAK,EAAC;AAA4B;gEACrCC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAoB,I,aAC7BC,mBAAA,CAAiC,YAA7B,0BAAwB,E;;EAEzBD,KAAK,EAAC;AAAQ;;EACZA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC;AAAc;;EAUxBA,KAAK,EAAC;AAAoB;mBAlBrC;;uBACEE,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJF,mBAAA,CAqBM,OArBNG,UAqBM,GApBJC,UAEM,EACNJ,mBAAA,CAWM,OAXNK,UAWM,GAVJL,mBAAA,CASM,OATNM,UASM,GARJN,mBAAA,CAMM,OANNO,UAMM,I,kBALJN,mBAAA,CAIMO,SAAA,QAblBC,WAAA,CAS2CC,MAAA,CAAAC,OAAO,EATlD,CASyBC,MAAM,EAAEC,KAAK;yBAA1BZ,mBAAA,CAIM;MAJmCa,GAAG,EAAED,KAAK;MAC9Cd,KAAK,EAAC,kBAAkB;MACvBgB,KAAK,EAXvBC,eAAA;QAAAC,KAAA,KAWqCL,MAAM,CAACM,WAAW;QAAAC,eAAA,EAAsBP,MAAM,CAACQ;MAAK;wBACxER,MAAM,CAACS,IAAI;oCAGlBrB,mBAAA,CAAoE;IAA/DD,KAAK,EAAC,SAAS;IAAEgB,KAAK,EAfrCC,eAAA;MAAAM,IAAA,KAekDZ,MAAA,CAAAa,eAAe;IAAA;+BAG3DvB,mBAAA,CAIM,OAJNwB,UAIM,GAHJxB,mBAAA,CAES;IAFDD,KAAK,EAAC,sBAAsB;IAAE0B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEjB,MAAA,CAAAkB,cAAA,IAAAlB,MAAA,CAAAkB,cAAA,IAAAD,IAAA,CAAc;IAAGE,QAAQ,EAAEnB,MAAA,CAAAoB;sBACnEpB,MAAA,CAAAoB,WAAW,mDApBxBC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}