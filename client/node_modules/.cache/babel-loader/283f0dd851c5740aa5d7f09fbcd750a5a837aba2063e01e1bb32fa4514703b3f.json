{"ast":null,"code":"import { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nexport default {\n  name: \"SpectrumStep\",\n  setup() {\n    const store = useStore();\n    const isSelecting = ref(false);\n    const pointerPosition = ref(0);\n    const selectedIndex = ref(null);\n    const choices = computed(() => store.state.choices);\n    const startSelection = () => {\n      if (isSelecting.value) return;\n      isSelecting.value = true;\n      let direction = 1;\n      let speed = 5;\n      let deceleration = 0.98;\n      let time = 0;\n      const containerWidth = document.querySelector('.spectrum-container').clientWidth;\n      const animate = () => {\n        pointerPosition.value += direction * speed;\n        if (pointerPosition.value <= 0 || pointerPosition.value >= containerWidth) {\n          direction *= -1;\n        }\n        speed *= deceleration;\n        time += 16;\n        if (speed > 0.1 && time < 5000) {\n          requestAnimationFrame(animate);\n        } else {\n          selectResult(containerWidth);\n        }\n      };\n      requestAnimationFrame(animate);\n    };\n    const selectResult = containerWidth => {\n      const percentage = pointerPosition.value / containerWidth * 100;\n      let accumulatedProbability = 0;\n      const result = choices.value.find((choice, index) => {\n        accumulatedProbability += choice.probability;\n        if (percentage <= accumulatedProbability) {\n          selectedIndex.value = index;\n          return true;\n        }\n        return false;\n      });\n      console.log(\"Selected result:\", result.text);\n      store.commit(\"setResult\", result.text);\n      store.commit(\"setCurrentStep\", 6);\n      isSelecting.value = false;\n    };\n    onMounted(() => {\n      // Initialize pointer at a random position\n      const containerWidth = document.querySelector('.spectrum-container').clientWidth;\n      pointerPosition.value = Math.random() * containerWidth;\n    });\n    return {\n      choices,\n      isSelecting,\n      pointerPosition,\n      selectedIndex,\n      startSelection\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","name","setup","store","isSelecting","pointerPosition","selectedIndex","choices","state","startSelection","value","direction","speed","deceleration","time","containerWidth","document","querySelector","clientWidth","animate","requestAnimationFrame","selectResult","percentage","accumulatedProbability","result","find","choice","index","probability","console","log","text","commit","Math","random"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/SpinWheelStep.vue"],"sourcesContent":["<template>\n  <div class=\"container spectrum-step\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12 text-center\">\n        <h2>Choose from the Spectrum</h2>\n      </div>\n      <div class=\"col-12\">\n        <div class=\"spectrum-container\">\n          <div class=\"spectrum-bar\">\n            <div v-for=\"(choice, index) in choices\" :key=\"index\" \n                 class=\"spectrum-section\"\n                 :style=\"{ width: `${choice.probability}%`, backgroundColor: choice.color }\">\n              {{ choice.text }}\n            </div>\n          </div>\n          <div class=\"pointer\" :style=\"{ left: `${pointerPosition}%` }\"></div>\n        </div>\n      </div>\n      <div class=\"col-12 text-center\">\n        <button class=\"btn btn-primary mt-3\" @click=\"startSelection\" :disabled=\"isSelecting\">\n          {{ isSelecting ? \"Selecting...\" : \"Start\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"SpectrumStep\",\n  setup() {\n    const store = useStore();\n    const isSelecting = ref(false);\n    const pointerPosition = ref(0);\n    const selectedIndex = ref(null);\n    const choices = computed(() => store.state.choices);\n\n    const startSelection = () => {\n      if (isSelecting.value) return;\n\n      isSelecting.value = true;\n      let direction = 1;\n      let speed = 5;\n      let deceleration = 0.98;\n      let time = 0;\n      const containerWidth = document.querySelector('.spectrum-container').clientWidth;\n\n      const animate = () => {\n        pointerPosition.value += direction * speed;\n        if (pointerPosition.value <= 0 || pointerPosition.value >= containerWidth) {\n          direction *= -1;\n        }\n        speed *= deceleration;\n        time += 16;\n\n        if (speed > 0.1 && time < 5000) {\n          requestAnimationFrame(animate);\n        } else {\n          selectResult(containerWidth);\n        }\n      };\n\n      requestAnimationFrame(animate);\n    };\n\n    const selectResult = (containerWidth) => {\n      const percentage = (pointerPosition.value / containerWidth) * 100;\n      let accumulatedProbability = 0;\n      const result = choices.value.find((choice, index) => {\n        accumulatedProbability += choice.probability;\n        if (percentage <= accumulatedProbability) {\n          selectedIndex.value = index;\n          return true;\n        }\n        return false;\n      });\n\n      console.log(\"Selected result:\", result.text);\n      store.commit(\"setResult\", result.text);\n      store.commit(\"setCurrentStep\", 6);\n      isSelecting.value = false;\n    };\n\n    onMounted(() => {\n      // Initialize pointer at a random position\n      const containerWidth = document.querySelector('.spectrum-container').clientWidth;\n      pointerPosition.value = Math.random() * containerWidth;\n    });\n\n    return {\n      choices,\n      isSelecting,\n      pointerPosition,\n      selectedIndex,\n      startSelection,\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.spectrum-step {\n  padding: 2rem;\n}\n\n.spectrum-container {\n  position: relative;\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.spectrum-bar {\n  display: flex;\n}\n\n.spectrum-section {\n  text-align: center;\n  padding: 1rem;\n  color: white;\n}\n\n.pointer {\n  position: absolute;\n  top: 0;\n  width: 2px;\n  height: 100%;\n  background-color: red;\n}\n\nbutton {\n  margin-top: 20px;\n  padding: 10px 20px;\n  font-size: 18px;\n  cursor: pointer;\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n}\n</style>\n"],"mappings":"AA4BA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAC9C,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,WAAU,GAAIP,GAAG,CAAC,KAAK,CAAC;IAC9B,MAAMQ,eAAc,GAAIR,GAAG,CAAC,CAAC,CAAC;IAC9B,MAAMS,aAAY,GAAIT,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAMU,OAAM,GAAIT,QAAQ,CAAC,MAAMK,KAAK,CAACK,KAAK,CAACD,OAAO,CAAC;IAEnD,MAAME,cAAa,GAAIA,CAAA,KAAM;MAC3B,IAAIL,WAAW,CAACM,KAAK,EAAE;MAEvBN,WAAW,CAACM,KAAI,GAAI,IAAI;MACxB,IAAIC,SAAQ,GAAI,CAAC;MACjB,IAAIC,KAAI,GAAI,CAAC;MACb,IAAIC,YAAW,GAAI,IAAI;MACvB,IAAIC,IAAG,GAAI,CAAC;MACZ,MAAMC,cAAa,GAAIC,QAAQ,CAACC,aAAa,CAAC,qBAAqB,CAAC,CAACC,WAAW;MAEhF,MAAMC,OAAM,GAAIA,CAAA,KAAM;QACpBd,eAAe,CAACK,KAAI,IAAKC,SAAQ,GAAIC,KAAK;QAC1C,IAAIP,eAAe,CAACK,KAAI,IAAK,KAAKL,eAAe,CAACK,KAAI,IAAKK,cAAc,EAAE;UACzEJ,SAAQ,IAAK,CAAC,CAAC;QACjB;QACAC,KAAI,IAAKC,YAAY;QACrBC,IAAG,IAAK,EAAE;QAEV,IAAIF,KAAI,GAAI,GAAE,IAAKE,IAAG,GAAI,IAAI,EAAE;UAC9BM,qBAAqB,CAACD,OAAO,CAAC;QAChC,OAAO;UACLE,YAAY,CAACN,cAAc,CAAC;QAC9B;MACF,CAAC;MAEDK,qBAAqB,CAACD,OAAO,CAAC;IAChC,CAAC;IAED,MAAME,YAAW,GAAKN,cAAc,IAAK;MACvC,MAAMO,UAAS,GAAKjB,eAAe,CAACK,KAAI,GAAIK,cAAc,GAAI,GAAG;MACjE,IAAIQ,sBAAqB,GAAI,CAAC;MAC9B,MAAMC,MAAK,GAAIjB,OAAO,CAACG,KAAK,CAACe,IAAI,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QACnDJ,sBAAqB,IAAKG,MAAM,CAACE,WAAW;QAC5C,IAAIN,UAAS,IAAKC,sBAAsB,EAAE;UACxCjB,aAAa,CAACI,KAAI,GAAIiB,KAAK;UAC3B,OAAO,IAAI;QACb;QACA,OAAO,KAAK;MACd,CAAC,CAAC;MAEFE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEN,MAAM,CAACO,IAAI,CAAC;MAC5C5B,KAAK,CAAC6B,MAAM,CAAC,WAAW,EAAER,MAAM,CAACO,IAAI,CAAC;MACtC5B,KAAK,CAAC6B,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;MACjC5B,WAAW,CAACM,KAAI,GAAI,KAAK;IAC3B,CAAC;IAEDX,SAAS,CAAC,MAAM;MACd;MACA,MAAMgB,cAAa,GAAIC,QAAQ,CAACC,aAAa,CAAC,qBAAqB,CAAC,CAACC,WAAW;MAChFb,eAAe,CAACK,KAAI,GAAIuB,IAAI,CAACC,MAAM,CAAC,IAAInB,cAAc;IACxD,CAAC,CAAC;IAEF,OAAO;MACLR,OAAO;MACPH,WAAW;MACXC,eAAe;MACfC,aAAa;MACbG;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}