{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport api from '@/services/api';\nexport default {\n  name: 'SignUpPage',\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const username = ref('');\n    const email = ref('');\n    const password = ref('');\n    const error = ref('');\n    const isLoading = ref(false);\n    const recaptcha = ref(null);\n    const isFormValid = computed(() => {\n      return username.value.length > 0 && email.value.includes('@') && password.value.length >= 8;\n    });\n    const loadReCaptcha = () => {\n      const script = document.createElement('script');\n      script.src = 'https://www.google.com/recaptcha/api.js?render=explicit';\n      script.async = true;\n      script.defer = true;\n      document.head.appendChild(script);\n      script.onload = () => {\n        window.grecaptcha.ready(() => {\n          window.grecaptcha.render(recaptcha.value, {\n            sitekey: 'your-site-key'\n          });\n        });\n      };\n    };\n    onMounted(() => {\n      loadReCaptcha();\n    });\n    const signUp = async () => {\n      isLoading.value = true;\n      error.value = '';\n      try {\n        const token = grecaptcha.getResponse();\n        if (!token) {\n          throw new Error('Please complete the reCAPTCHA');\n        }\n        const response = await api.signup({\n          username: username.value,\n          email: email.value,\n          password: password.value,\n          token: token\n        });\n        console.log('SignUp successful:', response);\n        await store.dispatch('setUser', response.user);\n        localStorage.setItem('token', response.token);\n        router.push('/');\n      } catch (e) {\n        console.error('Sign up error:', e);\n        if (e.response?.status === 409) {\n          error.value = 'Email already in use. Please use a different email.';\n        } else if (e.message === 'Please complete the reCAPTCHA') {\n          error.value = e.message;\n        } else {\n          error.value = 'Sign up failed. Please try again.';\n        }\n      } finally {\n        isLoading.value = false;\n        grecaptcha.reset();\n      }\n    };\n    return {\n      username,\n      email,\n      password,\n      error,\n      isLoading,\n      signUp,\n      recaptcha,\n      isFormValid\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useRouter","useStore","api","name","setup","router","store","username","email","password","error","isLoading","recaptcha","isFormValid","value","length","includes","loadReCaptcha","script","document","createElement","src","async","defer","head","appendChild","onload","window","grecaptcha","ready","render","sitekey","signUp","token","getResponse","Error","response","signup","console","log","dispatch","user","localStorage","setItem","push","e","status","message","reset"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/SignUp.vue"],"sourcesContent":["<template>\n    <div class=\"container sign-up-page\">\n      <div class=\"row justify-content-center\">\n        <div class=\"col-12 col-md-6 col-lg-4\">\n          <h2 class=\"text-center mb-4\">Sign Up</h2>\n          <form @submit.prevent=\"signUp\">\n            <div class=\"mb-3\">\n              <label for=\"username\" class=\"form-label\">Username</label>\n              <input type=\"text\" class=\"form-control custom-input\" id=\"username\" v-model=\"username\" required>\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"email\" class=\"form-label\">Email address</label>\n              <input type=\"email\" class=\"form-control custom-input\" id=\"email\" v-model=\"email\" required>\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"password\" class=\"form-label\">Password</label>\n              <input type=\"password\" class=\"form-control custom-input\" id=\"password\" v-model=\"password\" required>\n            </div>\n            <div class=\"mb-3\">\n              <div ref=\"recaptcha\"></div>\n            </div>\n            <div class=\"d-grid\">\n              <button type=\"submit\" class=\"btn btn-primary btn-lg\" :disabled=\"isLoading || !isFormValid\">\n                {{ isLoading ? 'Signing Up...' : 'Sign Up' }}\n              </button>\n            </div>\n          </form>\n          <p v-if=\"error\" class=\"text-danger mt-3\">{{ error }}</p>\n          <p class=\"mt-3 text-center\">\n            Already have an account? <router-link to=\"/login\">Login</router-link>\n          </p>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { ref, onMounted, computed } from 'vue';\n  import { useRouter } from 'vue-router';\n  import { useStore } from 'vuex';\n  import api from '@/services/api';\n  \n  export default {\n    name: 'SignUpPage',\n    setup() {\n      const router = useRouter();\n      const store = useStore();\n      const username = ref('');\n      const email = ref('');\n      const password = ref('');\n      const error = ref('');\n      const isLoading = ref(false);\n      const recaptcha = ref(null);\n  \n      const isFormValid = computed(() => {\n        return username.value.length > 0 && \n               email.value.includes('@') && \n               password.value.length >= 8;\n      });\n  \n      const loadReCaptcha = () => {\n        const script = document.createElement('script');\n        script.src = 'https://www.google.com/recaptcha/api.js?render=explicit';\n        script.async = true;\n        script.defer = true;\n        document.head.appendChild(script);\n        script.onload = () => {\n          window.grecaptcha.ready(() => {\n            window.grecaptcha.render(recaptcha.value, {\n              sitekey: 'your-site-key'\n            });\n          });\n        };\n      };\n  \n      onMounted(() => {\n        loadReCaptcha();\n      });\n  \n      const signUp = async () => {\n        isLoading.value = true;\n        error.value = '';\n        try {\n          const token = grecaptcha.getResponse();\n          if (!token) {\n            throw new Error('Please complete the reCAPTCHA');\n          }\n          const response = await api.signup({\n            username: username.value,\n            email: email.value,\n            password: password.value,\n            token: token\n          });\n          console.log('SignUp successful:', response);\n          \n          await store.dispatch('setUser', response.user);\n          localStorage.setItem('token', response.token);\n          \n          router.push('/');\n        } catch (e) {\n          console.error('Sign up error:', e);\n          if (e.response?.status === 409) {\n            error.value = 'Email already in use. Please use a different email.';\n          } else if (e.message === 'Please complete the reCAPTCHA') {\n            error.value = e.message;\n          } else {\n            error.value = 'Sign up failed. Please try again.';\n          }\n        } finally {\n          isLoading.value = false;\n          grecaptcha.reset();\n        }\n      };\n  \n      return { \n        username, \n        email, \n        password, \n        error, \n        isLoading, \n        signUp, \n        recaptcha,\n        isFormValid \n      };\n    }\n  }\n  </script>\n  \n  <style lang=\"scss\" scoped>\n  // ... (your existing styles)\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}