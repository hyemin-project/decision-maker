{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_view)])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_2","_component_router_view"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <AppHeader />\n    <div class=\"container\">\n      <router-view></router-view>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport AppHeader from '@/components/AppHeader.vue';\nimport api from '@/services/api';\n\nexport default {\n  name: 'App',\n  components: {\n    AppHeader\n  },\n  setup() {\n    const store = useStore();\n\n    function decodeToken(token) {\n      try {\n        return JSON.parse(atob(token.split('.')[1]));\n      } catch (e) {\n        console.error('Error decoding token:', e);\n        return null;\n      }\n    }\n\n    // After login\n    const token = localStorage.getItem('token');\n    console.log('Decoded token:', decodeToken(token));\n\n    onMounted(async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const user = await api.verifyToken(token);\n          store.dispatch('setUser', user);\n        } catch (error) {\n          console.error('Token verification failed:', error);\n          localStorage.removeItem('token');\n        }\n      }\n    });\n\n    return {};\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n\nbody.dark-mode {\n  background-color: #1a1a1a;\n  color: #ffffff;\n}\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAENC,KAAK,EAAC;AAAW;;;;uBAFxBC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAAaC,oBAAA,GACbC,mBAAA,CAEM,OAFNC,UAEM,GADJH,YAAA,CAA2BI,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}