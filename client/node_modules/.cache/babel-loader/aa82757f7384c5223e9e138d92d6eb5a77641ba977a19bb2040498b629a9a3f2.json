{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'AppHeader',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const isDarkMode = ref(false);\n    const isMenuOpen = ref(false);\n    const isLoggedIn = computed(() => !!store.state.user);\n    const username = computed(() => store.state.user ? store.state.user.username : '');\n    const toggleTheme = () => {\n      isDarkMode.value = !isDarkMode.value;\n      document.body.classList.toggle('dark-mode', isDarkMode.value);\n      localStorage.setItem('darkMode', isDarkMode.value);\n    };\n    const toggleMenu = () => {\n      isMenuOpen.value = !isMenuOpen.value;\n    };\n    const closeMenuOnResize = () => {\n      if (window.innerWidth > 768 && isMenuOpen.value) {\n        isMenuOpen.value = false;\n      }\n    };\n    const logout = async () => {\n      await store.dispatch('logout');\n      router.push('/');\n    };\n    onMounted(() => {\n      isDarkMode.value = localStorage.getItem('darkMode') === 'true';\n      document.body.classList.toggle('dark-mode', isDarkMode.value);\n      window.addEventListener('resize', closeMenuOnResize);\n    });\n    onUnmounted(() => {\n      window.removeEventListener('resize', closeMenuOnResize);\n    });\n    return {\n      isDarkMode,\n      isMenuOpen,\n      isLoggedIn,\n      username,\n      toggleTheme,\n      toggleMenu,\n      logout\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","onUnmounted","useStore","useRouter","name","setup","store","router","isDarkMode","isMenuOpen","isLoggedIn","state","user","username","toggleTheme","value","document","body","classList","toggle","localStorage","setItem","toggleMenu","closeMenuOnResize","window","innerWidth","logout","dispatch","push","getItem","addEventListener","removeEventListener"],"sources":["/Users/hyemin/Documents/Projects/decision-maker/client/src/components/AppHeader.vue"],"sourcesContent":["<template>\n  <header class=\"app-header navbar navbar-expand-lg navbar-light bg-light\" :class=\"{ 'dark-mode': isDarkMode, 'menu-open': isMenuOpen }\">\n    <div class=\"container-fluid\">\n      <router-link class=\"navbar-brand\" to=\"/\">Advanced Virtual Decision Maker</router-link>\n      <button class=\"navbar-toggler menu-toggle\" type=\"button\" @click=\"toggleMenu\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" :class=\"{ show: isMenuOpen }\">\n        <ul class=\"navbar-nav ms-auto\">\n          <li class=\"nav-item\">\n            <router-link class=\"nav-link\" to=\"/\" exact-active-class=\"active\">Home</router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link class=\"nav-link\" to=\"/new-decision\" active-class=\"active\">New Decision</router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link class=\"nav-link\" to=\"/history\" active-class=\"active\">History</router-link>\n          </li>\n          <template v-if=\"!isLoggedIn\">\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/login\" active-class=\"active\">Login</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/signup\" active-class=\"active\">Sign Up</router-link>\n            </li>\n          </template>\n          <template v-else>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\" @click.prevent=\"logout\">Logout</a>\n            </li>\n            <li class=\"nav-item\">\n              <span class=\"nav-link welcome\">Welcome, {{ username }}</span>\n            </li>\n          </template>\n        </ul>\n      </div>\n    </div>\n  </header>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onUnmounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: 'AppHeader',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const isDarkMode = ref(false);\n    const isMenuOpen = ref(false);\n\n    const isLoggedIn = computed(() => !!store.state.user);\n    const username = computed(() => store.state.user ? store.state.user.username : '');\n    \n\n    const toggleTheme = () => {\n      isDarkMode.value = !isDarkMode.value;\n      document.body.classList.toggle('dark-mode', isDarkMode.value);\n      localStorage.setItem('darkMode', isDarkMode.value);\n    };\n\n    const toggleMenu = () => {\n      isMenuOpen.value = !isMenuOpen.value;\n    };\n\n    const closeMenuOnResize = () => {\n      if (window.innerWidth > 768 && isMenuOpen.value) {\n        isMenuOpen.value = false;\n      }\n    };\n\n    const logout = async () => {\n      await store.dispatch('logout');\n      router.push('/');\n    };\n\n    onMounted(() => {\n      isDarkMode.value = localStorage.getItem('darkMode') === 'true';\n      document.body.classList.toggle('dark-mode', isDarkMode.value);\n      window.addEventListener('resize', closeMenuOnResize);\n    });\n\n    onUnmounted(() => {\n      window.removeEventListener('resize', closeMenuOnResize);\n    });\n\n    return {\n      isDarkMode,\n      isMenuOpen,\n      isLoggedIn,\n      username,\n      toggleTheme,\n      toggleMenu,\n      logout\n    };\n  }\n};\n</script>\n\n<style scoped>\n.app-header {\n  padding: 1rem 2rem;\n  transition: background-color 0.3s ease;\n}\n\n.navbar-brand {\n  font-size: 1.5rem;\n  color: #333;\n  transition: color 0.3s ease;\n}\n\n.nav-link {\n  color: #555;\n  transition: color 0.3s ease;\n}\n\n.nav-link:hover, .nav-link.active {\n  color: #007bff;\n}\n\n.theme-toggle, .menu-toggle {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.2rem;\n  color: #555;\n  transition: color 0.3s ease;\n}\n\n.theme-toggle:hover, .menu-toggle:hover {\n  color: #007bff;\n}\n\n/* Dark mode styles */\n.app-header.dark-mode {\n  background-color: #333;\n}\n\n.dark-mode .navbar-brand {\n  color: #fff;\n}\n\n.dark-mode .nav-link {\n  color: #ccc;\n}\n\n.dark-mode .nav-link:hover, .dark-mode .nav-link.active {\n  color: #4db6ac;\n}\n\n.dark-mode .theme-toggle, .dark-mode .menu-toggle {\n  color: #ccc;\n}\n\n.dark-mode .theme-toggle:hover, .dark-mode .menu-toggle:hover {\n  color: #4db6ac;\n}\n\n.nav-link {\n  cursor: pointer;\n}\n\n.nav-link.welcome {\n  font-weight: bold;\n  cursor: default;\n}\n</style>\n"],"mappings":";AAyCA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAU,QAAS,KAAK;AAC3D,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CAAC;IACxB,MAAMK,MAAK,GAAIJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,UAAS,GAAIV,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAMW,UAAS,GAAIX,GAAG,CAAC,KAAK,CAAC;IAE7B,MAAMY,UAAS,GAAIX,QAAQ,CAAC,MAAM,CAAC,CAACO,KAAK,CAACK,KAAK,CAACC,IAAI,CAAC;IACrD,MAAMC,QAAO,GAAId,QAAQ,CAAC,MAAMO,KAAK,CAACK,KAAK,CAACC,IAAG,GAAIN,KAAK,CAACK,KAAK,CAACC,IAAI,CAACC,QAAO,GAAI,EAAE,CAAC;IAGlF,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxBN,UAAU,CAACO,KAAI,GAAI,CAACP,UAAU,CAACO,KAAK;MACpCC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEX,UAAU,CAACO,KAAK,CAAC;MAC7DK,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEb,UAAU,CAACO,KAAK,CAAC;IACpD,CAAC;IAED,MAAMO,UAAS,GAAIA,CAAA,KAAM;MACvBb,UAAU,CAACM,KAAI,GAAI,CAACN,UAAU,CAACM,KAAK;IACtC,CAAC;IAED,MAAMQ,iBAAgB,GAAIA,CAAA,KAAM;MAC9B,IAAIC,MAAM,CAACC,UAAS,GAAI,GAAE,IAAKhB,UAAU,CAACM,KAAK,EAAE;QAC/CN,UAAU,CAACM,KAAI,GAAI,KAAK;MAC1B;IACF,CAAC;IAED,MAAMW,MAAK,GAAI,MAAAA,CAAA,KAAY;MACzB,MAAMpB,KAAK,CAACqB,QAAQ,CAAC,QAAQ,CAAC;MAC9BpB,MAAM,CAACqB,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED5B,SAAS,CAAC,MAAM;MACdQ,UAAU,CAACO,KAAI,GAAIK,YAAY,CAACS,OAAO,CAAC,UAAU,MAAM,MAAM;MAC9Db,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEX,UAAU,CAACO,KAAK,CAAC;MAC7DS,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAEP,iBAAiB,CAAC;IACtD,CAAC,CAAC;IAEFtB,WAAW,CAAC,MAAM;MAChBuB,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAER,iBAAiB,CAAC;IACzD,CAAC,CAAC;IAEF,OAAO;MACLf,UAAU;MACVC,UAAU;MACVC,UAAU;MACVG,QAAQ;MACRC,WAAW;MACXQ,UAAU;MACVI;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}